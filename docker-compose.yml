version: '2'

services:
  zookeeper:
    image: zookeeper:3.4.11
    hostname: zookeeper
    ports:
      - "2181:2181"
    networks:
      app_net:
        ipv4_address: 172.16.190.2

  mesos-master:
    image: mesosphere/mesos-master:1.7.1
    hostname: localhost
    ports:
      - "5050:5050"
    networks:
      app_net:
        ipv4_address: 172.16.190.3
    links:
      - zookeeper
    depends_on:
      - zookeeper
    environment:
      MESOS_ZK: zk://zookeeper:2181/mesos
      MESOS_QUORUM: 1
      MESOS_CLUSTER: docker-compose
      MESOS_HOSTNAME: localhost
      MESOS_WORK_DIR: /var/tmp/mesos
      MESOS_LOG_DIR: /var/log/mesos
      LIBPROCESS_IP: 172.16.190.3

  mesos-slave:
    image: mesosphere/mesos-slave:1.7.1
    privileged: true
    hostname: mesos-slave
    ports:
      - "5051:5051"
    networks:
      app_net:
        ipv4_address: 172.16.190.4
    links:
      - zookeeper:zookeeper
      - mesos-master:master.mesos
    depends_on:
      - zookeeper
      - mesos-master
    environment:
      MESOS_MASTER: zk://zookeeper:2181/mesos
      MESOS_CONTAINERIZERS: mesos,docker
      MESOS_PORT: 5051
      MESOS_RESOURCES: ports(*):[11000-11999]
      MESOS_HOSTNAME: mesos-slave
      MESOS_WORK_DIR: /var/tmp/mesos
      MESOS_LOG_DIR: /var/log/mesos
      MESOS_SYSTEMD_ENABLE_SUPPORT: "false"
      MESOS_FRAMEWORKS_HOME: /var/tmp/mesos/frameworks
      MESOS_IMAGE_PROVIDERS: docker
      MESOS_ISOLATION: filesystem/linux,docker/runtime
      LIBPROCESS_IP: 172.16.190.4
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  marathon-service:
    image: mesosphere/marathon:v1.6.587
    ports:
      - "8080:8080"
    hostname: localhost
    networks:
      app_net:
        ipv4_address: 172.16.190.5
    links:
      - zookeeper
      - mesos-master
      - mesos-slave
    depends_on:
      - zookeeper
      - mesos-master
      - mesos-slave
    environment:
      - MARATHON_ZK=zk://zookeeper:2181/marathon
      - MARATHON_MASTER=zk://zookeeper:2181/mesos
      - LIBPROCESS_IP=172.16.190.5

  marathon-ui:
    image: nginx:latest
    hostname: localhost
    ports:
     - "8081:8080"
    networks:
      app_net:
        ipv4_address: 172.16.190.6
    links:
      - marathon-service
    environment:
      - DNSDOCK_ALIAS=marathon.docker
    volumes:
      - ./resources/marathon-ui.nginx.conf:/etc/nginx/nginx.conf
      - ./dist:/usr/share/nginx/html
      - ./src/js/config/runtimeConfig.js:/usr/share/nginx/html/runtimeConfig.js

  devenv:
    hostname: localhost
    networks:
      app_net:
        ipv4_address: 172.16.190.7
    links:
      - marathon-service
    environment:
      - DNSDOCK_ALIAS=marathon.docker
    build:
        context: .
    volumes:
      - ./src:/opt/marathon-ui/src
      - dist:/opt/marathon-ui/dist
      - ./src/js/config/runtimeConfig.js:/opt/marathon-ui/dist/runtimeConfig.js

volumes:
  dist: {}

networks:
  app_net:
    driver: bridge
    ipam:
      driver: default
      config:
      -
        subnet: 172.16.190.0/24
